@use "variables" as variable;

@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin fixed($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: fixed;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin respond-to($breakpoint) {
  @if $breakpoint == "small" {
    @media (max-width: 576px) {
      @content;
    }
  } @else if $breakpoint == "medium" {
    @media (max-width: variable.$mobile-breakpoint) {
      @content;
    }
  } @else if $breakpoint == "large" {
    @media (max-width: 992px) {
      @content;
    }
  } @else if $breakpoint == "xlarge" {
    @media (max-width: 1200px) {
      @content;
    }
  }
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-truncate-multiline($lines: 2, $line-height: 1.5) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  line-height: $line-height;
  max-height: $lines * $line-height * 1em;
}

@mixin multi-line-truncate($lines: 2, $line-height: 1.5) {
  @include text-truncate-multiline($lines, $line-height);
}

@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  } @else if $level == 4 {
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
  }
}

@mixin shadow($level: 1) {
  @include box-shadow($level);
}

@mixin transition(
  $properties: all,
  $duration: variable.$transition-speed,
  $timing: ease
) {
  transition-property: $properties;
  transition-duration: $duration;
  transition-timing-function: $timing;
}

@mixin grid($columns: 1fr, $gap: variable.$spacing-md) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}

@mixin darken($color, $amount: 10%) {
  filter: brightness(0.9);
}
